# perf script event handlers, generated by perf script -g python
# Licensed under the terms of the GNU GPL License version 2

import os
import sys

sys.path.append(os.environ['PERF_EXEC_PATH'] +
                '/scripts/python/Perf-Trace-Util/lib/Perf/Trace')

from perf_trace_context import *
from Core import *
from Util import *

NSECS_PER_MSEC=1000000

def nsecs_to_str(nsecs):
    str = "%5u" % (nsecs / NSECS_PER_MSEC)
    return str

thread_blocktime = autodict()


def sched__sched_stat_runtime(event_name, context, common_cpu,
                              common_secs, common_nsecs, tid, common_comm,
                              common_callchain, comm, pid, runtime, vruntime):
    if not common_comm == "java":
        return

    current_time = nsecs(common_secs, common_nsecs)
    if (thread_blocktime.has_key(tid)):
        delta = current_time - thread_blocktime[tid]
        off_cpu = abs(delta - runtime)
        if ( off_cpu > 5*NSECS_PER_MSEC ):
            print "java %s %s" % (tid, nsecs_to_str(off_cpu))
            for node in common_callchain:
                if 'sym' in node:
                    print "\t%x  %s ()" % (node['ip'], node['sym']['name'])
            print ""
    thread_blocktime[tid] = current_time
